{"version":3,"sources":["components/Form/Form.js","components/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","getWeather","class","name","className","value","Weather","temperature","Math","round","city","country","humidity","description","error","API_KEY","App","state","event","a","preventDefault","target","elements","URL","fetch","api","json","data","setState","main","temp","sys","weather","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA0BeA,EAxBF,SAACC,GACV,OACI,8BACI,uBAAMC,SAAUD,EAAME,WAAtB,UACI,qBAAKC,MAAM,WAAX,SACI,yBAAQC,KAAK,OAAOC,UAAU,UAA9B,UACI,wBAAQC,MAAM,GAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,yBAGR,uDCyBDC,EA3CC,SAACP,GACb,OACI,sBAAKK,UAAU,OAAf,UAEQL,EAAMQ,aACN,oBAAGH,UAAU,WAAb,yBACI,uBAAMA,UAAU,aAAhB,cAA+BI,KAAKC,MAAMV,EAAMQ,YAAc,QAA9D,eAIJR,EAAMW,MACN,oBAAGN,UAAU,WAAb,kBACI,uBAAMA,UAAU,aAAhB,cAA+BL,EAAMW,WAIzCX,EAAMY,SACN,oBAAGP,UAAU,WAAb,qBACI,uBAAMA,UAAU,aAAhB,cAA+BL,EAAMY,cAIzCZ,EAAMa,UACN,oBAAGR,UAAU,WAAb,sBACI,uBAAMA,UAAU,aAAhB,cAA+BL,EAAMa,eAIzCb,EAAMc,aACN,oBAAGT,UAAU,WAAb,yBACI,uBAAMA,UAAU,aAAhB,cAA+BL,EAAMc,kBAIzCd,EAAMe,OACN,oBAAGV,UAAU,iBAAb,mBACI,uBAAMA,UAAU,iBAAhB,cAAmCL,EAAMe,gBCjCvDC,EAAU,mCAyDDC,E,4MAvDbC,MAAQ,CACNV,YAAa,GACbG,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,MAAO,I,EAGTb,W,uCAAa,WAAOiB,GAAP,qBAAAC,EAAA,6DACXD,EAAME,iBACAV,EAAOQ,EAAMG,OAAOC,SAASZ,KAAKL,MAClCkB,EAHK,2DAGqDb,EAHrD,kBAGmEK,GAHnE,SAIOS,MAAMD,GAJb,cAILE,EAJK,gBAKQA,EAAIC,OALZ,OAKLC,EALK,OAMPjB,EACF,EAAKkB,SAAS,CACZrB,YAAaoB,EAAKE,KAAKC,KACvBpB,KAAMiB,EAAKxB,KACXQ,QAASgB,EAAKI,IAAIpB,QAClBC,SAAUe,EAAKE,KAAKjB,SACpBC,YAAac,EAAKK,QAAQ,GAAGnB,YAC7BC,MAAO,KAGT,EAAKc,SAAS,CACZrB,YAAa,GACbG,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,MAAO,4BAtBA,4C,kGA2Bb,WACE,OACE,qBAAKV,UAAU,UAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMH,WAAYgC,KAAKhC,aACvB,cAAC,EAAD,CACEM,YAAe0B,KAAKhB,MAAMV,YAC1BG,KAAQuB,KAAKhB,MAAMP,KACnBC,QAAWsB,KAAKhB,MAAMN,QACtBC,SAAYqB,KAAKhB,MAAML,SACvBC,YAAeoB,KAAKhB,MAAMJ,YAC1BC,MAASmB,KAAKhB,MAAMH,iB,GAhDdoB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42b0fc78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) =>  {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.getWeather}>\r\n                <div class=\"myCities\">\r\n                    <select name=\"city\" className=\"chooses\">\r\n                        <option value=\"\">City...</option>\r\n                        <option value=\"Cairo\">Cairo</option>\r\n                        <option value=\"Mekka\">Mekka</option>\r\n                        <option value=\"Toronto\">Toronto</option>\r\n                        <option value=\"New York\">New York</option>\r\n                        <option value=\"San Francisco\">San Francisco</option>\r\n                        <option value=\"Moscow\">Moscow</option>\r\n                        <option value=\"Tokyo\">Tokyo</option>\r\n                        <option value=\"Berlin\">Berlin</option>\r\n                        <option value=\"Zurich\">Zurich</option>\r\n                    </select>\r\n                </div>\r\n                <button>Get Weather</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Weather = (props) => {\r\n    return (\r\n        <div className=\"info\">\r\n            {\r\n                props.temperature &&\r\n                <p className=\"info_key\">Temperature:\r\n                    <span className=\"info_value\"> {Math.round(props.temperature - 273.15)} &#176;C</span>\r\n                </p>\r\n            }\r\n            {\r\n                props.city &&\r\n                <p className=\"info_key\">City:\r\n                    <span className=\"info_value\"> {props.city}</span>\r\n                </p>\r\n            }\r\n            {\r\n                props.country &&\r\n                <p className=\"info_key\">Country:\r\n                    <span className=\"info_value\"> {props.country}</span>\r\n                </p>\r\n            }\r\n            {\r\n                props.humidity &&\r\n                <p className=\"info_key\">Humidity:\r\n                    <span className=\"info_value\"> {props.humidity}</span>\r\n                </p>\r\n            }\r\n            {\r\n                props.description &&\r\n                <p className=\"info_key\">Description:\r\n                    <span className=\"info_value\"> {props.description}</span>\r\n                </p>\r\n            }\r\n            {\r\n                props.error &&\r\n                <p className=\"info_key error\">Error:\r\n                    <span className=\"info_value err\"> {props.error}</span>\r\n                </p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather;","import React, {Component} from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\nimport Weather from './components/Weather/Weather';\n\nconst API_KEY = '11c120f83512a4f2cb8a7a44c4410e96';\nclass App extends Component {\n  state = {\n    temperature: '',\n    city: '',\n    country: '',\n    humidity: '',\n    description: '',\n    error: ''\n  }\n\n  getWeather = async (event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n    const URL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`;\n    const api = await fetch(URL);\n    const data = await api.json();\n    if (city) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: ''\n      });\n    } else {\n      this.setState({\n        temperature: '',\n        city: '',\n        country: '',\n        humidity: '',\n        description: '',\n        error: 'Please, Choose The City'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Wrapper\">\n        <div className=\"form-container\">\n          <Form getWeather={this.getWeather} />\n          <Weather\n            temperature = {this.state.temperature}\n            city = {this.state.city}\n            country = {this.state.country}\n            humidity = {this.state.humidity}\n            description = {this.state.description}\n            error = {this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}